// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SaleOfMoviesTickets;

namespace SaleOfMoviesTickets.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220507103019_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("SaleOfMoviesTickets.Entities.Auditorio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Auditorios");
                });

            modelBuilder.Entity("SaleOfMoviesTickets.Entities.AuditoriosSalas", b =>
                {
                    b.Property<int>("AuditorioId")
                        .HasColumnType("int");

                    b.Property<int>("SalaId")
                        .HasColumnType("int");

                    b.HasKey("AuditorioId", "SalaId");

                    b.HasIndex("SalaId");

                    b.ToTable("AuditoriosSalas");
                });

            modelBuilder.Entity("SaleOfMoviesTickets.Entities.Butaca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Butacas");
                });

            modelBuilder.Entity("SaleOfMoviesTickets.Entities.Sala", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Salas");
                });

            modelBuilder.Entity("SaleOfMoviesTickets.Entities.SalasButacas", b =>
                {
                    b.Property<int>("ButacaId")
                        .HasColumnType("int");

                    b.Property<int>("SalaId")
                        .HasColumnType("int");

                    b.HasKey("ButacaId", "SalaId");

                    b.HasIndex("SalaId");

                    b.ToTable("SalasButacas");
                });

            modelBuilder.Entity("SaleOfMoviesTickets.Entities.AuditoriosSalas", b =>
                {
                    b.HasOne("SaleOfMoviesTickets.Entities.Auditorio", "Auditorio")
                        .WithMany("AuditoriosSalas")
                        .HasForeignKey("AuditorioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SaleOfMoviesTickets.Entities.Sala", "Sala")
                        .WithMany("AuditoriosSalas")
                        .HasForeignKey("SalaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auditorio");

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("SaleOfMoviesTickets.Entities.SalasButacas", b =>
                {
                    b.HasOne("SaleOfMoviesTickets.Entities.Butaca", "Butaca")
                        .WithMany("SalasButacas")
                        .HasForeignKey("ButacaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SaleOfMoviesTickets.Entities.Sala", "Sala")
                        .WithMany("SalasButacas")
                        .HasForeignKey("SalaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Butaca");

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("SaleOfMoviesTickets.Entities.Auditorio", b =>
                {
                    b.Navigation("AuditoriosSalas");
                });

            modelBuilder.Entity("SaleOfMoviesTickets.Entities.Butaca", b =>
                {
                    b.Navigation("SalasButacas");
                });

            modelBuilder.Entity("SaleOfMoviesTickets.Entities.Sala", b =>
                {
                    b.Navigation("AuditoriosSalas");

                    b.Navigation("SalasButacas");
                });
#pragma warning restore 612, 618
        }
    }
}
